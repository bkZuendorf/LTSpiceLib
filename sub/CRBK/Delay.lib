*
* Timing: Delay
*
* Author:	Michael Haub
* Date:		11.02.2005
*
**********
.SUBCKT DelayDefault In Out GND PARAMS: Tdel=1us
E1 1 0 In GND 1
R1 2 0 1
T1 1 0 2 0 Td={Tdel} Z0=1
E2 Out GND 2 0 1
.ENDS DelayDefault

.SUBCKT DelayLaplace In Out GND PARAMS: Tdel=1us
* mathematisch: L(f(t-a))=e^(-a*s)*L(f(t))
E1 Out GND In GND Laplace=exp(-{Tdel}*s) ;mtol=0.1
.ENDS DelayLaplace
**********
*
.SUBCKT DelayTransmissionline In Out GND PARAMS: Tdel=1us
E1 1 0 In GND 1
R1 2 0 1
T1 1 0 2 0 Td={Tdel} Z0=1
E2 Out GND 2 0 1
.ENDS DelayTransmissionline
**********
*!
*! Tdel needs to be shorter than input pulse with!
*! Pulses that are shorter than Tdel will be filterd out!
*!
.SUBCKT DelayDigital In Out GND PARAMS: Tdel=1us
A1 In 0 0 0 0 0 Out 0 BUF Td={Tdel}
.ENDS DelayDigital
**********
*
.SUBCKT DelayBehavioral In Out GND PARAMS: Tdel=1us
B1 Out GND V=delay(V(In,GND),{Tdel})
;tripdv=10m tripdt=1n
.ENDS DelayBehavioral
**********
*!
*! Tdel needs to be shorter than input pulse with!
*! Pulses that are shorter than Tdel will be filterd out!
*!
.SUBCKT DelayTimer In Out GND PARAMS: Tdel=1us
B1 1 0 V=U(V(In,GND)-0.5)
C1 2 0 {1/0.5}
; rising edge
B2 0 2 I=if(V(1)>0&V(2)<1,1/{Tdel},0)
; falling edge
B3 0 2 I=if(V(1)<1&V(2)>0,-1/{Tdel},0)
B4 Out GND V=U(V(2)-0.5)
.ENDS DelayTimer
**********
